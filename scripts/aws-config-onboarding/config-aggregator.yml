#Copyright (c) Cloudneeti. All rights reserved.
#Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is  furnished to do so, subject to the following conditions:
#The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Parameters:
    env:
        Description: Environment Prefix
        Type: String
        Default: dev
    awsaccountid:
        Description: AWS Account ID
        Type: String
    aggregatorname:
        Description: Config Aggregator Name
        Type: String
Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
        BucketName:
          Fn::Join:
          - ""
          - - 'config-bucket-'
            - !Ref env
            - '-'
            - !Ref awsaccountid
        BucketEncryption:
            ServerSideEncryptionConfiguration:
                - ServerSideEncryptionByDefault:
                    SSEAlgorithm: AES256
        LifecycleConfiguration:
            Rules:
            - Id: Delete-ct-logs
              Prefix: AWSLogs/
              Status: Enabled
              ExpirationInDays: 2
              NoncurrentVersionExpirationInDays: 1
        VersioningConfiguration:
            Status: Enabled
        Tags: 
          -
            Key: "ServiceName"
            Value: "config-bucket"
          -
            Key: "Description"
            Value: "Bucket for config data collection"
  
  ConfigBucketPolicy:
    Type: AWS::S3::BucketPolicy
    DependsOn: S3Bucket
    Properties: 
      Bucket:
        Fn::Join:
        - ""
        - - 'config-bucket-'
          - !Ref env
          - '-'
          - !Ref awsaccountid
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: ConfigBucketPolicy1
            Action:
              - "s3:GetBucketAcl"
            Effect: "Allow"
            Principal:
              Service:
                - config.amazonaws.com
            Resource:
              Fn::Join:
              - ""
              - - 'arn:aws:s3:::config-bucket-'
                - !Ref env
                - '-'
                - !Ref awsaccountid
          - Sid: ConfigBucketPolicy2
            Action:
              - "s3:PutObject"
            Effect: "Allow"
            Principal:
              Service:
                - config.amazonaws.com
            Resource:
              Fn::Join:
              - ""
              - - 'arn:aws:s3:::config-bucket-'
                - !Ref env
                - '-'
                - !Ref awsaccountid
                - '/AWSLogs/'
                - !Ref awsaccountid
                - '/Config/*'
            Condition:
              StringEquals: 
                s3:x-amz-acl: 
                  - "bucket-owner-full-control"
  
  ConfigRole:
    Type: AWS::IAM::Role
    DependsOn: ConfigBucketPolicy
    Properties:
      RoleName:
        Fn::Join:
        - ""
        - - 'config-role-'
          - !Ref env
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "config.amazonaws.com" 
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWS_ConfigRole"
        
  ConfigRecorder:
    Type: AWS::Config::ConfigurationRecorder
    Properties: 
      Name:
        Fn::Join:
        - ""
        - - 'config'
          - !Ref env
      RecordingGroup:
        AllSupported: true
        IncludeGlobalResourceTypes: true
      RoleARN:
        Fn::Join:
        - ""
        - - 'arn:aws:iam::'
          - !Ref awsaccountid
          - ':role/config-role-'
          - !Ref env
          
  ConfigDeliveryChannel:
    Type: AWS::Config::DeliveryChannel
    Properties:
      Name:
        Fn::Join:
        - ""
        - - 'config-delivery-channel'
          - !Ref env
      S3BucketName:
        Fn::Join:
        - ""
        - - 'config-bucket-'
          - !Ref env
          - '-'
          - !Ref awsaccountid

  ConfigurationAggregator:
    Type: 'AWS::Config::ConfigurationAggregator'
    DependsOn: ConfigRecorder
    Properties:
      AccountAggregationSources:
        - AccountIds:
            - !Ref awsaccountid
          AllAwsRegions: true
      ConfigurationAggregatorName: !Ref aggregatorname







